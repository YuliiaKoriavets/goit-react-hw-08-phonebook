{"version":3,"file":"static/js/563.5ece741c.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelectors.js","webpack://goit-react-hw-08-phonebook/./src/components/Wrapper/Wrapper.module.css?9e3e","components/Wrapper/Wrapper.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","webpack://goit-react-hw-08-phonebook/./src/components/Loader/Loader.module.css?d03f","components/Loader/Loader.jsx","webpack://goit-react-hw-08-phonebook/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilter = state => state.contacts.filter;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectFilteredContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Wrapper_wrapper__VNn5c\",\"title\":\"Wrapper_title__qFmYF\"};","import PropTypes from 'prop-types';\nimport css from '../Wrapper/Wrapper.module.css'\n\nexport default function Wrapper({ title, children }) {\n  return (\n    <div className={css.wrapper}>\n      <h2 className={css.title}>{title}</h2>\n      {children}\n    </div>\n  );\n}\n\nWrapper.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport { nanoid } from 'nanoid';\nimport css from '../ContactForm/ContactForm.module.css';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { selectContacts } from 'redux/contacts/contactsSelectors';\nimport { useSelector } from 'react-redux';\n\nexport default function ContactForm() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const nameInputId = nanoid();\n  const numberInputId = nanoid();\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const newContact = { name, number };\n    const findName = contacts.find(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n\n    if (findName) {\n      alert(` ${findName.name} is already in contacts.`);\n    } else {\n      dispatch(addContact(newContact));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} action=\"\" onSubmit={handleSubmit}>\n      <label className={css.label} htmlFor={nameInputId}>\n        Name\n        <input\n          className={css.input}\n          id={nameInputId}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label className={css.label} htmlFor={numberInputId}>\n        Number\n        <input\n          className={css.input}\n          id={numberInputId}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button className={css.button} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"label\":\"Filter_label__vEd1E\",\"input\":\"Filter_input__N7T3z\"};","import { nanoid } from 'nanoid';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilter } from 'redux/contacts/contactsSelectors';\nimport { changeFilter } from 'redux/contacts/contactsSlice';\nimport css from '../Filter/Filter.module.css';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChangeFilter = event => {\n    dispatch(changeFilter(event.currentTarget.value));\n  };\n\n  let filterInputId = nanoid();\n  return (\n    <label className={css.label} htmlFor={filterInputId}>\n      {' '}\n      Find contacts by name\n      <input\n        className={css.input}\n        id={filterInputId}\n        type=\"text\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </label>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"Loader_wrapper__2YrQT\"};","import { FallingLines } from 'react-loader-spinner';\nimport css from \"../Loader/Loader.module.css\"\n\nexport default function Loader() {\n  return (\n    <div className={css.wrapper}>\n      <FallingLines\n        color=\"#b6e0e0\"\n        width=\"100\"\n        visible={true}\n        ariaLabel=\"falling-lines-loading\"\n      />\n   </div>\n  );\n}","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\",\"text\":\"ContactList_text__+NWAW\",\"button\":\"ContactList_button__7kL4l\"};","import css from '../ContactList/ContactList.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from 'redux/contacts/contactsSelectors';\nimport { deleteContact } from 'redux/contacts/contactsOperations';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectFilteredContacts);\n\n  return (\n    <ul className={css.list}>\n      {contacts.map(({ id, name, number }) => (\n        <li className={css.item} key={id}>\n          <p className={css.text}>\n            {name}: {number}\n          </p>\n          <button\n            className={css.button}\n            type=\"button\"\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useDispatch, useSelector } from \"react-redux\"\nimport { useEffect } from \"react\"\nimport { selectIsLoading } from \"redux/contacts/contactsSelectors\"\nimport { fetchContacts } from \"redux/contacts/contactsOperations\"\nimport Wrapper from \"components/Wrapper/Wrapper\"\nimport ContactForm from \"components/ContactForm/ContactForm\"\nimport Filter from \"components/Filter/Filter\"\nimport Loader from \"components/Loader/Loader\"\nimport ContactList from \"components/ContactList/ContactList\"\n\nexport default function Contacts (){\n    const dispatch = useDispatch();\n    const isLoading = useSelector(selectIsLoading);\n  \n    useEffect(() => {\n      dispatch(fetchContacts());\n    }, [dispatch]);\n  \n    return(\n        <section>\n        <Wrapper title=\"Phonebook\">\n          <ContactForm />\n        </Wrapper>\n        <Wrapper title=\"Contacts\">\n          <Filter />\n          {isLoading && <Loader />}\n          <ContactList />\n        </Wrapper>\n      </section>\n    )\n}"],"names":["selectContacts","state","contacts","selectFilter","filter","selectIsLoading","isLoading","selectFilteredContacts","createSelector","normalizedFilter","toLowerCase","name","includes","Wrapper","title","children","className","css","ContactForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","nameInputId","nanoid","numberInputId","handleChange","event","target","value","reset","action","onSubmit","preventDefault","newContact","findName","find","contact","alert","addContact","htmlFor","id","type","onChange","pattern","required","Filter","filterInputId","changeFilter","currentTarget","Loader","color","width","visible","ariaLabel","ContactList","map","onClick","deleteContact","Contacts","useEffect","fetchContacts"],"sourceRoot":""}